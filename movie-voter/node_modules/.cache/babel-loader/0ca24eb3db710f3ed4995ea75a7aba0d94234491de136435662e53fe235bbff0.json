{"ast":null,"code":"import { io } from \"socket.io-client\";\nexport let socket;\nexport function initSocketConnection(state, participants) {\n  socket = io(\"http://localhost:5000\", {\n    autoConnect: false\n  });\n  socket.auth = {\n    nickname: state.nickname\n  };\n  socket.on(\"connect\", () => {\n    console.log(\"CONNECTED: \", socket.id, \"\\n\", JSON.stringify({\n      ...state\n    }));\n    socket.emit(\"join\", state.roomID, state.nickname);\n  });\n  socket.on(\"disconnect\", () => {\n    console.log(\"DISCONNECTED: \", socket.id);\n  });\n  socket.on(\"newUser\", nickname => {\n    console.log(nickname, \"has joined the room.\");\n    participants.current = [...participants.current, nickname];\n    console.log(participants);\n  });\n  socket.on(\"userDisconnect\", socketID => {\n    console.log(socketID, \"left.\");\n  });\n}\nexport function disconnectSocket() {\n  socket.off(\"connect\");\n  socket.off(\"disconnect\");\n  socket.off(\"pong\");\n  socket.disconnect();\n}","map":{"version":3,"names":["io","socket","initSocketConnection","state","participants","autoConnect","auth","nickname","on","console","log","id","JSON","stringify","emit","roomID","current","socketID","disconnectSocket","off","disconnect"],"sources":["C:/Users/antho/Documents/Programming/WebDev/Movie Voter/movie-voter/src/services/Socket.js"],"sourcesContent":["import { io } from \"socket.io-client\";\r\n\r\nexport let socket;\r\n\r\nexport function initSocketConnection(state, participants) {\r\n  socket = io(\"http://localhost:5000\", { autoConnect: false });\r\n  socket.auth = { nickname: state.nickname};\r\n  socket.on(\"connect\", () => {\r\n    console.log(\"CONNECTED: \", socket.id, \"\\n\", JSON.stringify({ ...state }));\r\n    socket.emit(\"join\", state.roomID, state.nickname);\r\n  });\r\n\r\n  socket.on(\"disconnect\", () => {\r\n    console.log(\"DISCONNECTED: \", socket.id);\r\n  });\r\n\r\n  socket.on(\"newUser\", (nickname) => {\r\n    console.log(nickname, \"has joined the room.\");\r\n    participants.current = [...participants.current, nickname];\r\n    console.log(participants);\r\n  });\r\n\r\n  socket.on(\"userDisconnect\", (socketID) => {\r\n    console.log(socketID, \"left.\");\r\n  });\r\n}\r\n\r\nexport function disconnectSocket() {\r\n  socket.off(\"connect\");\r\n  socket.off(\"disconnect\");\r\n  socket.off(\"pong\");\r\n  socket.disconnect();\r\n}\r\n"],"mappings":"AAAA,SAASA,EAAE,QAAQ,kBAAkB;AAErC,OAAO,IAAIC,MAAM;AAEjB,OAAO,SAASC,oBAAoB,CAACC,KAAK,EAAEC,YAAY,EAAE;EACxDH,MAAM,GAAGD,EAAE,CAAC,uBAAuB,EAAE;IAAEK,WAAW,EAAE;EAAM,CAAC,CAAC;EAC5DJ,MAAM,CAACK,IAAI,GAAG;IAAEC,QAAQ,EAAEJ,KAAK,CAACI;EAAQ,CAAC;EACzCN,MAAM,CAACO,EAAE,CAAC,SAAS,EAAE,MAAM;IACzBC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAET,MAAM,CAACU,EAAE,EAAE,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAE,GAAGV;IAAM,CAAC,CAAC,CAAC;IACzEF,MAAM,CAACa,IAAI,CAAC,MAAM,EAAEX,KAAK,CAACY,MAAM,EAAEZ,KAAK,CAACI,QAAQ,CAAC;EACnD,CAAC,CAAC;EAEFN,MAAM,CAACO,EAAE,CAAC,YAAY,EAAE,MAAM;IAC5BC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAET,MAAM,CAACU,EAAE,CAAC;EAC1C,CAAC,CAAC;EAEFV,MAAM,CAACO,EAAE,CAAC,SAAS,EAAGD,QAAQ,IAAK;IACjCE,OAAO,CAACC,GAAG,CAACH,QAAQ,EAAE,sBAAsB,CAAC;IAC7CH,YAAY,CAACY,OAAO,GAAG,CAAC,GAAGZ,YAAY,CAACY,OAAO,EAAET,QAAQ,CAAC;IAC1DE,OAAO,CAACC,GAAG,CAACN,YAAY,CAAC;EAC3B,CAAC,CAAC;EAEFH,MAAM,CAACO,EAAE,CAAC,gBAAgB,EAAGS,QAAQ,IAAK;IACxCR,OAAO,CAACC,GAAG,CAACO,QAAQ,EAAE,OAAO,CAAC;EAChC,CAAC,CAAC;AACJ;AAEA,OAAO,SAASC,gBAAgB,GAAG;EACjCjB,MAAM,CAACkB,GAAG,CAAC,SAAS,CAAC;EACrBlB,MAAM,CAACkB,GAAG,CAAC,YAAY,CAAC;EACxBlB,MAAM,CAACkB,GAAG,CAAC,MAAM,CAAC;EAClBlB,MAAM,CAACmB,UAAU,EAAE;AACrB"},"metadata":{},"sourceType":"module","externalDependencies":[]}